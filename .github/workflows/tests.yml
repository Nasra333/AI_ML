name: Run Tests

on:
  push:
    branches:
      - main
      - master
      - develop
  pull_request:
    branches:
      - main
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with flake8
        continue-on-error: true
        run: |
          pip install flake8
          # Stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Check code formatting
        continue-on-error: true
        run: |
          pip install black
          black --check .

      - name: Type checking with mypy
        continue-on-error: true
        run: |
          pip install mypy
          mypy . --ignore-missing-imports || true

      - name: Security check with bandit
        continue-on-error: true
        run: |
          pip install bandit
          bandit -r . -f json -o bandit-report.json || true

      - name: Test imports
        run: |
          python -c "import gradio; print('âœ… Gradio imported successfully')"
          python -c "import openai; print('âœ… OpenAI imported successfully')"
          python -c "import anthropic; print('âœ… Anthropic imported successfully')"
          python -c "import google.generativeai; print('âœ… Google AI imported successfully')"

      - name: Validate app.py
        run: |
          python -m py_compile app.py
          python -m py_compile utils.py
          python -m py_compile constants.py
          echo "âœ… All Python files compile successfully"

      - name: Test Summary
        if: always()
        run: |
          echo "ðŸŽ‰ Tests completed for Python ${{ matrix.python-version }}"
